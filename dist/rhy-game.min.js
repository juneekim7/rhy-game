"use strict";class Judgement{static miss=new Judgement("miss",0,!1);name;time;isCombo;constructor(e,t,i=!0){if(t<0)throw Error("judgement time must be not negative");this.name=e,this.time=t,this.isCombo=i}}class Note{expectedTime;classNames;moveAnimation;fadeAnimation;timingFunction;sizeRatio;hasJudged;judgement;createDOM(e,t,i,s){if(this.hasJudged)return;let n=document.createElement("div");for(let o of this.classNames){let a=n.getAttribute("class")??"";n.setAttribute("class",a+" "+o)}n.style.setProperty("--size",`calc(${i} * ${this.sizeRatio})`),n.style.animation=`${t}ms ${this.timingFunction} ${this.moveAnimation}`,n.addEventListener("animationend",()=>{n.style.animation=`${t/s*this.sizeRatio}ms ${this.timingFunction} ${this.fadeAnimation}`,n.addEventListener("animationend",()=>{n.remove()})}),e.appendChild(n)}judge(e,t,i){this.hasJudged;let s=Math.abs(i-this.expectedTime);for(let n of e)if(s<n.time)return this.hasJudged=!0,this.judgement=n,n;return i<this.expectedTime?"none":(this.hasJudged=!0,this.judgement=Judgement.miss,Judgement.miss)}constructor(e,{classNames:t=["note"],moveAnimation:i="move",fadeAnimation:s="fade",timingFunction:n="linear",sizeRatio:o=.1}={}){this.expectedTime=e,this.hasJudged=!1,this.judgement="none",this.classNames=t,this.moveAnimation=i,this.fadeAnimation=s,this.timingFunction=n,this.sizeRatio=o}}class Normal extends Note{constructor(e,{classNames:t=["note","normal"],moveAnimation:i="move",fadeAnimation:s="fade",timingFunction:n="linear",sizeRatio:o=.1}={}){super(e,{classNames:t,moveAnimation:i,fadeAnimation:s,timingFunction:n,sizeRatio:o})}}class Long extends Note{judge(e,t,i){return"keydown"!==t||this.hasJudged?this.hasJudged?Judgement.miss:"none":super.judge(e,t,i)}constructor(e,t,{classNames:i=["note","long"],moveAnimation:s="move",fadeAnimation:n="fade",timingFunction:o="linear",sizeRatio:a=1}={}){super(e,{classNames:i,moveAnimation:s,fadeAnimation:n,timingFunction:o,sizeRatio:a});let{lane:d,index:r,timePerBeat:h}=t,m=d[r],l=1;for(;d[r+l]===m;)l++;if(this.sizeRatio=l,r>0&&d[r-1]===m)1!==l?(this.hasJudged=!0,this.judge=()=>Judgement.miss):(this.expectedTime+=h*l,this.judge=(e,t,i)=>"keyup"!==t||this.hasJudged?this.hasJudged?"none":Judgement.miss:super.judge(e,t,i));else if(1===l)throw Error("long notes length should be at least 2")}}class Tap extends Normal{constructor(e,{classNames:t=["note","normal","tap"],moveAnimation:i="move",fadeAnimation:s="fade",timingFunction:n="linear",sizeRatio:o=.1}={}){super(e,{classNames:t,moveAnimation:i,fadeAnimation:s,timingFunction:n,sizeRatio:o})}}class Hold extends Long{constructor(e,t,{classNames:i=["note","long","hold"],moveAnimation:s="move",fadeAnimation:n="fade",timingFunction:o="linear",sizeRatio:a=.1}={}){super(e,t,{classNames:i,moveAnimation:s,fadeAnimation:n,timingFunction:o,sizeRatio:a})}}class Drag extends Tap{constructor(e,{classNames:t=["note","normal","tap","drag"],moveAnimation:i="move",fadeAnimation:s="fade",timingFunction:n="linear",sizeRatio:o=.1}={}){super(e,{classNames:t,moveAnimation:i,fadeAnimation:s,timingFunction:n,sizeRatio:o})}}class Flick extends Tap{constructor(e,{classNames:t=["note","normal","tap","flick"],moveAnimation:i="move",fadeAnimation:s="fade",timingFunction:n="linear",sizeRatio:o=.1}={}){super(e,{classNames:t,moveAnimation:i,fadeAnimation:s,timingFunction:n,sizeRatio:o})}}class HoldFlick extends Hold{constructor(e,t,{classNames:i=["note","long","hold","hold-flick"],moveAnimation:s="move",fadeAnimation:n="fade",timingFunction:o="linear",sizeRatio:a=.1}={}){super(e,t,{classNames:i,moveAnimation:s,fadeAnimation:n,timingFunction:o,sizeRatio:a})}}class Info{music;title;artist;difficulty;volume;bpm;split;delay;cover;background;design;get timePerBeat(){return 24e4/this.bpm/this.split}constructor(e){this.music=e.music,this.title=e.title,this.artist=e.artist,this.difficulty=e.difficulty,e.volume?this.volume=e.volume:this.volume=1,this.bpm=e.bpm,e.split?this.split=e.split:this.split=16,this.split=e.split,e.delay?this.delay=e.delay:this.delay=0,this.cover=e.cover,this.background=e.background,this.design=e.design}}class Song{info;chart;constructor({info:e,chart:t}){this.info=new Info(e),this.chart=t}}class Timer{initTime;getTime(){return new Date().getTime()-this.initTime}constructor(e=0){this.initTime=new Date().getTime()+e}}class Game{DOM;keybind;notes;judgements;maxScore;delay;sizePerBeat;#a;expectedTime=new Timer;actualTime=new Timer;createdNotes={};isPressed={};judgementData={score:0,combo:0,lastJudgement:"none",judgements:{}};set laneSizeRatio(e){this.#a=e,document.documentElement.style.setProperty("--lane-size",`calc(${this.sizePerBeat} * ${e})`)}get laneSizeRatio(){return this.#a}initJudge(){this.judgementData={score:0,combo:0,lastJudgement:"none",judgements:{}};let e=this.judgementData;for(let t of this.judgements)e.judgements[t.name]=0;e.judgements.miss=0,this.sendJudgeToDOM()}sendJudgeToDOM(){let e=this.DOM,t=this.judgementData;e.score&&(e.score.textContent=t.score.toString().padStart(this.maxScore.toString().length,"0")),e.judgement&&(e.judgement.textContent=t.lastJudgement),e.combo&&(e.combo.textContent=t.combo.toString())}setJudge(e){let t=this.judgementData;t.lastJudgement=e.name,t.judgements[e.name]++,e.isCombo?t.combo++:t.combo=0,this.sendJudgeToDOM()}judgeLane(e,t,i=this.actualTime.getTime()){if(!this.createdNotes[e])throw Error(`there is no lane ${e}`);if(0===this.createdNotes[e].length)return;let s=this.createdNotes[e][0];if(s.hasJudged){this.createdNotes[e].shift(),this.judgeLane(e,t,i);return}let n=s.judge(this.judgements,t,i);"none"!==n&&(this.setJudge(n),this.createdNotes[e].shift())}getActualChart(e,t){if(!(t in e.chart))throw Error(`there is no mode ${t} in the song ${e.info.title}`);if(0===e.chart[t].length)throw Error(`there is no information in the mode ${t} of the song ${e.info.title}`);let i={};for(let s of e.chart[t])for(let n in s)n in this.DOM&&(i[n]||(i[n]=""),i[n]+=s[n].replace(/\|/g,""),this.createdNotes[n]=[]);return i}setKeyBind(e){for(let t in e)this.isPressed[t]=!1,window.addEventListener("keydown",e=>{e.key in this.keybind&&!this.isPressed[e.key]&&(this.isPressed[e.key]=!0,this.judgeLane(this.keybind[e.key],"keydown"))}),window.addEventListener("keyup",e=>{e.key in this.keybind&&(this.isPressed[e.key]=!1,this.judgeLane(this.keybind[e.key],"keyup"))})}loadNote(e,t){let i=0,s=t*this.laneSizeRatio;setInterval(()=>{for(let n in e){let o=e[n];if(i===o.length)return;let a=o[i];if(a in this.notes){let d=this.notes[a](this.expectedTime.getTime(),{lane:o,index:i,timePerBeat:t});d.createDOM(this.DOM[n],s,this.sizePerBeat,this.laneSizeRatio),this.createdNotes[n].push(d),setTimeout(()=>{this.createdNotes[n].includes(d)&&this.createdNotes[n].shift(),d.hasJudged||(d.hasJudged=!0,this.setJudge(Judgement.miss))},s+t*d.sizeRatio+this.judgements[this.judgements.length-1].time)}}i++},t)}play(e,t){let i=e.info.timePerBeat*this.laneSizeRatio;this.initJudge(),this.setKeyBind(this.getActualChart(e,t)),this.expectedTime=new Timer,this.actualTime=new Timer(i);let s=new Audio(e.info.music);s.volume=e.info.volume,setTimeout(()=>{this.loadNote(this.getActualChart(e,t),e.info.timePerBeat)},0),setTimeout(()=>{s.play()},i+this.delay),console.log(`${e.info.title} start`)}constructor({DOM:e={},keybind:t={},notes:i={n:e=>new Tap(e),l:(e,t)=>new Hold(e,t),d:e=>new Drag(e),f:e=>new Flick(e),x:(e,t)=>new HoldFlick(e,t)},judgements:s=[new Judgement("perfect",40,!0),new Judgement("great",80,!0),new Judgement("good",100,!0),new Judgement("bad",200,!1)],maxScore:n=1e5,delay:o=0,sizePerBeat:a="100px",laneSizeRatio:d=8}={}){this.DOM=e,this.keybind=t,this.notes=i,this.judgements=s.sort((e,t)=>e.time-t.time),this.maxScore=n,this.delay=o,"number"==typeof a&&(a+="px"),this.sizePerBeat=a,this.#a=d,this.laneSizeRatio=d}}